/* eslint-disable */

/*
ATTENTION: This is an obfuscated file. You do not need to understand it.
Do NOT edit this file directly. Use it as a black box.

If you notice any issues with using this file, please contact the TAs.
*/
const _0x3376f5 = _0x10d6;
(function (_0x2a19a8, _0x4ce20f) {
    const _0x13ad4e = _0x10d6, _0x4add44 = _0x2a19a8();
    while (!![]) {
        try {
            const _0x293850 = parseInt(_0x13ad4e(0xd6)) / 0x1 + -parseInt(_0x13ad4e(0xe7)) / 0x2 * (parseInt(_0x13ad4e(0xd8)) / 0x3) + parseInt(_0x13ad4e(0xc7)) / 0x4 * (parseInt(_0x13ad4e(0xc1)) / 0x5) + -parseInt(_0x13ad4e(0xc8)) / 0x6 * (-parseInt(_0x13ad4e(0xb0)) / 0x7) + -parseInt(_0x13ad4e(0xbb)) / 0x8 + -parseInt(_0x13ad4e(0xd2)) / 0x9 + -parseInt(_0x13ad4e(0xb8)) / 0xa * (-parseInt(_0x13ad4e(0xca)) / 0xb);
            if (_0x293850 === _0x4ce20f)
                break;
            else
                _0x4add44['push'](_0x4add44['shift']());
        } catch (_0x4850f6) {
            _0x4add44['push'](_0x4add44['shift']());
        }
    }
}(_0x2f62, 0x86560));
const util = require('../util/util'), distribution = global[_0x3376f5(0xc2)];
function _0x10d6(_0x30942f, _0x2b80c3) {
    const _0x10d63f = _0x2f62();
    return _0x10d6 = function (_0x66b073, _0x2dfc9d) {
        _0x66b073 = _0x66b073 - 0xae;
        let _0x1e982c = _0x10d63f[_0x66b073];
        return _0x1e982c;
    }, _0x10d6(_0x30942f, _0x2b80c3);
}
function getNode(_0xdb6202, _0x48df2c, _0x1f74e1) {
    const _0x5ca855 = _0x3376f5, _0x56b961 = {
            'LUxnJ': function (_0x2e8f4e, _0x5aee2a) {
                return _0x2e8f4e(_0x5aee2a);
            },
            'EKKpQ': 'nid'
        };
    distribution[_0xdb6202[_0x5ca855(0xc6)]]['status'][_0x5ca855(0xdc)](_0x56b961['EKKpQ'], (_0x452fc7, _0x457164) => {
        const _0x28d4b0 = _0x5ca855;
        let _0x3b198d = Object['values'](_0x457164), _0x79a067 = util['id'][_0x28d4b0(0xb1)](_0x48df2c), _0x309b20 = _0xdb6202['hash'](_0x79a067, _0x3b198d), _0x4330d5 = _0x309b20[_0x28d4b0(0xd5)](0x0, 0x5);
        console[_0x28d4b0(0xc3)](_0x28d4b0(0xd0) + JSON[_0x28d4b0(0xb6)](_0x48df2c) + _0x28d4b0(0xd1) + JSON[_0x28d4b0(0xb6)](_0x3b198d) + _0x28d4b0(0xcb) + JSON['stringify'](_0x309b20) + '\x0a\x20\x20\x20\x20\x20\x20\x20\x20SID:\x20' + JSON['stringify'](_0x4330d5) + _0x28d4b0(0xae) + JSON[_0x28d4b0(0xb6)](global['nodeConfig']) + _0x28d4b0(0xe6)), distribution[_0x28d4b0(0xd3)][_0x28d4b0(0xda)]['get'](_0xdb6202[_0x28d4b0(0xc6)], (_0x13dcd5, _0x39d00d) => {
            const _0x1e23f0 = _0x28d4b0;
            let _0x53bef7 = _0x39d00d[_0x4330d5];
            _0x56b961[_0x1e23f0(0xd9)](_0x1f74e1, _0x53bef7);
        });
    });
}
const mem = function (_0x1705e9) {
    const _0x5bc8c6 = _0x3376f5, _0x50d710 = {
            'TvvNv': function (_0x1079b2, _0x93eda2, _0x3ba5b0) {
                return _0x1079b2(_0x93eda2, _0x3ba5b0);
            },
            'BKPeG': _0x5bc8c6(0xdf),
            'NdYhg': 'get',
            'UkRUL': function (_0xded0eb, _0x4e47d3, _0x560cd9, _0x41b826) {
                return _0xded0eb(_0x4e47d3, _0x560cd9, _0x41b826);
            },
            'oYQWx': 'put',
            'aTTqr': function (_0x4c4939, _0x40d894, _0x558be3, _0x2a3542) {
                return _0x4c4939(_0x40d894, _0x558be3, _0x2a3542);
            },
            'ciOCD': _0x5bc8c6(0xdb),
            'dmsSp': function (_0x3323c8, _0x345cf4) {
                return _0x3323c8 === _0x345cf4;
            },
            'lYLLO': function (_0x46bb05, _0xadbf3) {
                return _0x46bb05 === _0xadbf3;
            },
            'cGwkU': _0x5bc8c6(0xdd),
            'vWFxT': _0x5bc8c6(0xe0)
        };
    let _0xe019bf = {};
    return _0xe019bf[_0x5bc8c6(0xc6)] = _0x1705e9[_0x5bc8c6(0xc6)] || _0x50d710[_0x5bc8c6(0xd7)], _0xe019bf['hash'] = _0x1705e9[_0x5bc8c6(0xb5)] || util['id'][_0x5bc8c6(0xbe)], {
        'get': (_0x4b4623, _0x1a9267) => {
            const _0x50ad88 = _0x5bc8c6;
            if (!_0x4b4623) {
                let _0x5b8434 = [{
                        'key': null,
                        'gid': _0xe019bf[_0x50ad88(0xc6)]
                    }];
                distribution[_0xe019bf[_0x50ad88(0xc6)]][_0x50ad88(0xb7)][_0x50ad88(0xd4)](_0x5b8434, {
                    'service': 'mem',
                    'method': _0x50d710[_0x50ad88(0xbf)]
                }, (_0x58c6e4, _0x3130d8) => {
                    const _0x42639a = _0x50ad88;
                    let _0x4d27aa = Object[_0x42639a(0xb4)](_0x3130d8)[_0x42639a(0xb3)]((_0x2494e4, _0x50ed02) => _0x2494e4['concat'](_0x50ed02), []);
                    _0x50d710[_0x42639a(0xcc)](_0x1a9267, _0x58c6e4, _0x4d27aa);
                });
                return;
            }
            _0x50d710['UkRUL'](getNode, _0xe019bf, _0x4b4623, _0x417c39 => {
                const _0x1deef5 = _0x50ad88;
                let _0x3dc4dd = [{
                            'key': _0x4b4623,
                            'gid': _0xe019bf[_0x1deef5(0xc6)]
                        }], _0x2757ea = {
                        'service': _0x50d710[_0x1deef5(0xba)],
                        'method': _0x1deef5(0xdc),
                        'node': _0x417c39
                    };
                console[_0x1deef5(0xc3)](_0x1deef5(0xde) + JSON[_0x1deef5(0xb6)](_0x4b4623) + '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Node:\x20' + JSON['stringify'](global[_0x1deef5(0xcd)]) + _0x1deef5(0xcf) + JSON[_0x1deef5(0xb6)](_0x417c39) + _0x1deef5(0xe8)), distribution[_0x1deef5(0xd3)][_0x1deef5(0xb7)][_0x1deef5(0xd4)](_0x3dc4dd, _0x2757ea, _0x1a9267);
            });
        },
        'put': (_0x4f63fb, _0x41f66b, _0x467d38) => {
            const _0x10379f = _0x5bc8c6, _0xedaf8 = {
                    'ECbov': _0x50d710[_0x10379f(0xba)],
                    'RrFtO': _0x50d710[_0x10379f(0xc9)]
                };
            _0x41f66b = _0x41f66b || util['id']['getID'](_0x4f63fb), _0x50d710['aTTqr'](getNode, _0xe019bf, _0x41f66b, _0x2ab8f4 => {
                const _0x3fbc40 = _0x10379f;
                let _0x209b12 = [
                        _0x4f63fb,
                        {
                            'key': _0x41f66b,
                            'gid': _0xe019bf[_0x3fbc40(0xc6)]
                        }
                    ], _0x4b8108 = {
                        'service': _0xedaf8[_0x3fbc40(0xc5)],
                        'method': _0xedaf8['RrFtO'],
                        'node': _0x2ab8f4
                    };
                console['log'](_0x3fbc40(0xce) + JSON[_0x3fbc40(0xb6)](_0x4f63fb) + _0x3fbc40(0xbd) + JSON['stringify'](_0x41f66b) + _0x3fbc40(0xc0) + JSON[_0x3fbc40(0xb6)](global[_0x3fbc40(0xcd)]) + _0x3fbc40(0xcf) + JSON[_0x3fbc40(0xb6)](_0x2ab8f4) + _0x3fbc40(0xe8)), distribution[_0x3fbc40(0xd3)][_0x3fbc40(0xb7)][_0x3fbc40(0xd4)](_0x209b12, _0x4b8108, _0x467d38);
            });
        },
        'del': (_0x403447, _0x5aa919) => {
            getNode(_0xe019bf, _0x403447, _0x31c22e => {
                const _0x4c40ee = _0x10d6;
                let _0x495747 = [{
                            'key': _0x403447,
                            'gid': _0xe019bf[_0x4c40ee(0xc6)]
                        }], _0x5a43d6 = {
                        'service': _0x50d710['BKPeG'],
                        'method': _0x50d710[_0x4c40ee(0xbc)],
                        'node': _0x31c22e
                    };
                distribution[_0x4c40ee(0xd3)]['comm']['send'](_0x495747, _0x5a43d6, _0x5aa919);
            });
        },
        'reconf': (_0x4949da, _0x3049f3) => {
            const _0x54101a = _0x5bc8c6;
            distribution[_0xe019bf[_0x54101a(0xc6)]][_0x54101a(0xdf)][_0x54101a(0xdc)](null, (_0x15821b, _0x529cf3) => {
                const _0x23b9fd = _0x54101a, _0x1ed351 = {
                        'EEYyc': function (_0x2a9441, _0x2f115d) {
                            const _0x248d82 = _0x10d6;
                            return _0x50d710[_0x248d82(0xb9)](_0x2a9441, _0x2f115d);
                        },
                        'SdRqY': function (_0x3945c5) {
                            return _0x3945c5();
                        },
                        'QBfrr': function (_0x1c6505, _0x46bba0) {
                            const _0x38d802 = _0x10d6;
                            return _0x50d710[_0x38d802(0xc4)](_0x1c6505, _0x46bba0);
                        },
                        'DaOif': _0x50d710[_0x23b9fd(0xbc)]
                    };
                distribution[_0xe019bf[_0x23b9fd(0xc6)]][_0x23b9fd(0xe1)][_0x23b9fd(0xdc)](_0x50d710[_0x23b9fd(0xb2)], (_0x32fa06, _0x21068d) => {
                    const _0x1a7df8 = _0x23b9fd;
                    let _0x49f32c = Object[_0x1a7df8(0xb4)](_0x21068d), _0x546ed1 = Object[_0x1a7df8(0xb4)](_0x4949da)['map'](_0x4c0faf => util['id'][_0x1a7df8(0xe3)](_0x4c0faf)), _0x4eb110 = 0x0;
                    const _0x356783 = () => {
                        const _0x55cd3b = _0x1a7df8;
                        _0x1ed351[_0x55cd3b(0xe5)](_0x4eb110, _0x529cf3[_0x55cd3b(0xe2)]) && _0x1ed351['SdRqY'](_0x3049f3);
                    };
                    if (_0x1ed351[_0x1a7df8(0xe5)](_0x529cf3[_0x1a7df8(0xe2)], 0x0)) {
                        _0x1ed351[_0x1a7df8(0xe4)](_0x3049f3);
                        return;
                    }
                    for (let _0x5c4b79 of _0x529cf3) {
                        let _0x11a6db = util['id'][_0x1a7df8(0xb1)](_0x5c4b79), _0x2d758a = _0xe019bf['hash'](_0x11a6db, _0x546ed1), _0x358338 = _0xe019bf[_0x1a7df8(0xb5)](_0x11a6db, _0x49f32c);
                        if (_0x1ed351['QBfrr'](_0x2d758a, _0x358338)) {
                            _0x4eb110++, _0x1ed351[_0x1a7df8(0xe4)](_0x356783);
                            continue;
                        }
                        let _0x2ac746 = _0x4949da[_0x2d758a[_0x1a7df8(0xd5)](0x0, 0x5)], _0x555c0e = [{
                                    'key': _0x5c4b79,
                                    'gid': _0xe019bf[_0x1a7df8(0xc6)]
                                }], _0x4f7cc8 = {
                                'service': _0x1a7df8(0xdf),
                                'method': _0x1ed351['DaOif'],
                                'node': _0x2ac746
                            };
                        distribution[_0x1a7df8(0xd3)][_0x1a7df8(0xb7)]['send'](_0x555c0e, _0x4f7cc8, (_0x49b260, _0x104087) => {
                            const _0xfe8546 = _0x1a7df8;
                            distribution[_0xe019bf[_0xfe8546(0xc6)]][_0xfe8546(0xdf)][_0xfe8546(0xaf)](_0x104087, _0x5c4b79, (_0x626e65, _0x210603) => {
                                _0x4eb110++, _0x356783();
                            });
                        });
                    }
                });
            });
        }
    };
};
function _0x2f62() {
    const _0x1d953f = [
        '6969636ElxYIC',
        'local',
        'send',
        'substring',
        '842615oMQmYa',
        'vWFxT',
        '111nihnEb',
        'LUxnJ',
        'groups',
        'del',
        'get',
        'nid',
        '[DISTRIBUTED\x20MEM]\x20GET\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Configuration:\x20',
        'mem',
        'all',
        'status',
        'length',
        'getNID',
        'SdRqY',
        'EEYyc',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20',
        '29806DZHECH',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20NODE:\x20',
        'put',
        '252483CEJwBP',
        'getID',
        'cGwkU',
        'reduce',
        'values',
        'hash',
        'stringify',
        'comm',
        '3941710VqHmzP',
        'dmsSp',
        'BKPeG',
        '8465712aiMwxg',
        'ciOCD',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Configuration:\x20',
        'naiveHash',
        'NdYhg',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Node:\x20',
        '2530430jGtFhX',
        'distribution',
        'log',
        'lYLLO',
        'ECbov',
        'gid',
        '8yQyGfH',
        '114xMTxdt',
        'oYQWx',
        '11fIQKGX',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20NID:\x20',
        'TvvNv',
        'nodeConfig',
        '[DISTRIBUTED\x20MEM]\x20PUT\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20State:\x20',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Target\x20Node:\x20',
        '[DISTRIBUTED\x20MEM]\x20GET\x20NODE\x0a\x20\x20\x20\x20\x20\x20\x20\x20Configuration:\x20',
        '\x0a\x20\x20\x20\x20\x20\x20\x20\x20NID\x20List:\x20'
    ];
    _0x2f62 = function () {
        return _0x1d953f;
    };
    return _0x2f62();
}
module['exports'] = mem;/* eslint-enable */
